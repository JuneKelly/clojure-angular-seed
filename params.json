{"name":"Clojure-angular-seed","tagline":"AngularJS in the front, Clojure in the back.","body":"# clojure-angular-seed\r\n\r\nA seed project for getting started fast with Clojure and AngularJS.\r\n\r\n\r\n## What?\r\n\r\nA quick and easy way to get off the ground with a Clojure and AngularJS.\r\nThis project provides a minimal Clojure web server which serves up a\r\nsingle-page AngularJS application and provides the beginnings of a RESTful\r\nbackend API. It also uses bower to manage front-end dependencies and grunt\r\nto orchestrate coffee-script and sass compilation, copying files around,\r\nstarting the dev server and watching for changes to source files.\r\n\r\n\r\n## Why?\r\n\r\nBecause it takes a while to get up and running with a\r\nClojure/Angular/CoffeeScript/Sass app in the first place, and that's before\r\nyou've even started to build the actual functionality of your cool new app.\r\nThis repo provides a minimal setup useful for getting straight to work\r\nrather than spending two hours just getting to square one.\r\n\r\n\r\n## How?\r\nThis project was set up by first generating a bare-bones\r\n[luminus](luminusweb.net) app, then generating [yeoman](yeoman.io) angular\r\napp and selectivly moving the good parts of the angular app over to the\r\nclojure project. The gruntfile was built from scratch to provide only the\r\nfunctionality that was needed to get the basic app working, consider it a\r\nbase from which to start work rather than a finished 'framework'.\r\n\r\n\r\n## Prerequisites\r\n\r\nYou will need [Leiningen][1] 2.0 or above installed.\r\n\r\n[1]: https://github.com/technomancy/leiningen\r\n\r\nYou will also need to have [nodejs](http://nodejs.org) and\r\n[ruby](http://ruby-lang.org) installed.\r\n\r\n\r\n## Running\r\n\r\nTo set up the project, install grunt-cli if you haven't already:\r\n```\r\n$ npm install -g grunt-cli\r\n```\r\ndepending on how you installed nodejs, you may need root permissions for\r\nthe above command. Subsequent commands should not be run with root\r\npermissions.\r\n\r\n\r\nInstall the Sass ruby gem:\r\n```\r\n$ gem install sass\r\n```\r\n\r\n\r\nThen run the bootstrapper script, which will install npm and bower\r\npackages, and also install the webdriver binaries needed to run the\r\nprotractor tests:\r\n```\r\n$ ./bin/bootstrap.sh\r\n```\r\n\r\n\r\nFinally, to run the development server:\r\n```\r\n$ grunt server\r\n```\r\n\r\n\r\nTo make the process of starting your new project easier, you can instantly\r\nchange the name of the project by running:\r\n```\r\n$ ./bin/change-project-name.sh <name>\r\n```\r\n\r\nYou can also blow away the existing git repository (which would just point\r\nto this repo) and start fresh with:\r\n```\r\n$ ./bin/git-reinit.sh\r\n```\r\n\r\n\r\nFor example: `$ ./bin/change-project-name.sh wibble` will change your\r\nproject and its clojure modules to be called 'wibble' rather than the\r\ndefault 'cljang'.\r\n\r\n\r\n## Testing\r\n\r\nRun the [protractor](https://github.com/angular/protractor) end-to-end tests:\r\n```\r\n$ grunt test:e2e\r\n```\r\nThis will run the tests against the currently running server.\r\n\r\n\r\nRun the clojure tests of the web service:\r\n```\r\n$ grunt test:ring\r\n```\r\n\r\n\r\nOr, run all tests in sequence:\r\n```\r\n$ grunt test:all\r\n```\r\n\r\n\r\nNote, that as the protractor tests are run against the currently running\r\nserver, you may wish to set up a separate grunt task to run the server with\r\nthe 'testing' profile (perhaps you'd like to use a different database for\r\ntesting). Left as an exercise for the reader ;)\r\n\r\n\r\n## Future\r\n\r\nIn future, expect to see:\r\n* tests, both for the angular frontend and for the clojure api\r\n* easy deployment/packaging\r\n* other tiny improvements\r\n* relentless yak shaving\r\n\r\n\r\n## License\r\n\r\nCopyright Â© 2013 Shane Kilkelly, [MIT License](opensource.org/licenses/MIT)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}